# Info
info.properties.environment=test

# Mongo Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/personDB
spring.data.mongodb.database=noticesMongoDb

# Storage Account Configuration
spring.cloud.azure.storage.blob.notices.enabled=false
spring.cloud.azure.storage.blob.notices.connection_string=conn-string
spring.cloud.azure.storage.blob.notices.containerName=${NOTICE_STORAGE_CONTAINER_NAME:notices}

# EH Kafka Configuration

spring.cloud.stream.bindings.noticeComplete-in-0.destination=${KAFKA_NOTICE_COMPLETE_TOPIC:pagopa-printit-complete-evh}
spring.cloud.stream.bindings.noticeComplete-in-0.group=$Default
spring.cloud.stream.bindings.noticeComplete-in-0.binder=complete-consumer
spring.cloud.stream.binders.complete-consumer.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER:}
spring.cloud.stream.binders.complete-consumer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=${NOTICE_COMPLETE_KAFKA_SASL_JAAS_CONFIG:}

spring.cloud.stream.bindings.noticeComplete-out-0.destination=${KAFKA_NOTICE_COMPLETE_TOPIC:pagopa-printit-complete-evh}
spring.cloud.stream.bindings.noticeComplete-out-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.bindings.noticeComplete-out-0.binder=complete-producer
spring.cloud.stream.binders.complete-producer.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER:}
spring.cloud.stream.binders.complete-producer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=${NOTICE_COMPLETE_KAFKA_SASL_JAAS_CONFIG:}
spring.cloud.stream.binders.complete-producer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer


spring.cloud.stream.bindings.noticeError-in-0.destination=${KAFKA_NOTICE_ERROR_TOPIC:pagopa-printit-errors-evh}
spring.cloud.stream.bindings.noticeError-in-0.group=$Default
spring.cloud.stream.bindings.noticeError-in-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.binders.error-consumer.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER:}
spring.cloud.stream.binders.error-consumer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=${NOTICE_ERROR_KAFKA_SASL_JAAS_CONFIG:}
spring.cloud.stream.binders.error-consumer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer

spring.cloud.stream.bindings.noticeError-out-0.destination=${KAFKA_NOTICE_COMPLETE_TOPIC:pagopa-printit-complete-evh}
spring.cloud.stream.bindings.noticeError-out-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.binders.error-producer.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER:}
spring.cloud.stream.binders.error-producer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=${NOTICE_COMPLETE_KAFKA_SASL_JAAS_CONFIG:}
spring.cloud.stream.binders.error-producer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer

spring.cloud.stream.bindings.noticeGeneration-out-0.destination=${KAFKA_NOTICE_GENERATION_TOPIC:pagopa-printit-evh}
spring.cloud.stream.bindings.noticeGeneration-out-0.content-type=${KAFKA_CONTENT_TYPE:application/json}
spring.cloud.stream.binders.generatrion-producer.environment.spring.cloud.stream.kafka.binder.brokers=${KAFKA_BROKER:}
spring.cloud.stream.binders.generatrion-producer.environment.spring.cloud.stream.kafka.binder.configuration.sasl.jaas.config=${KAFKA_SASL_JAAS_CONFIG:}
spring.cloud.stream.binders.generatrion-producer.environment.spring.cloud.stream.kafka.binder.configuration.key.serializer=org.apache.kafka.common.serialization.StringSerializer


# AES Configs
aes.secret.key=123
aes.salt=salt


max_retry.on_error=${MAX_RETRIES_ON_ERRORS:3}